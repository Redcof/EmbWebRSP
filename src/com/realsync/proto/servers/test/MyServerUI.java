/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.realsync.proto.servers.test;

import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import com.realsync.proto.servers.RealSyncServer;

/**
 *
 * @author Arijit
 */
public class MyServerUI extends javax.swing.JFrame {

    /**
     * Creates new form MyServerUI
     */
    public MyServerUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtServerPort = new javax.swing.JTextField();
        btnToggleServerStatus = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtArLog = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("PORT");

        txtServerPort.setText("2090");

        btnToggleServerStatus.setText("START");
        btnToggleServerStatus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnToggleServerStatusMouseClicked(evt);
            }
        });

        txtArLog.setEditable(false);
        txtArLog.setColumns(20);
        txtArLog.setRows(5);
        txtArLog.setWrapStyleWord(true);
        jScrollPane1.setViewportView(txtArLog);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtServerPort, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                        .addComponent(btnToggleServerStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtServerPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnToggleServerStatus))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnToggleServerStatusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnToggleServerStatusMouseClicked
        // TODO add your handling code here:
        this.btnToggleServerStatus.setText("Performing...");
        this.btnToggleServerStatus.setEnabled(false);
        if (this.ServerStarted) {
            if (this.Server != null) {
                this.Server.stop();
            }
        } else {
            if (this.txtServerPort.getText().trim().isEmpty()) {
                this.log("Port is empty");
                return;
            }

            try {
                int port = Integer.parseInt(this.txtServerPort.getText().trim());
                this.Server = new RealSyncServer(port) {
                    @Override
                    public void statusMessage(String s) {
                        log(s);
                    }

                    @Override
                    public void serverStarted() {
                        btnToggleServerStatus.setEnabled(true);
                        ServerStarted = true;
                        btnToggleServerStatus.setText("STOP");
                        log("Server started");
                    }

                    @Override
                    public void serverClosed() {
                        btnToggleServerStatus.setEnabled(true);
                        ServerStarted = false;
                        btnToggleServerStatus.setText("START");
                        log("Server closed");

                    }
                };
                new Thread(this.Server).start();

            } catch (Exception ex) {
                this.log("Invalid PORT number");
            }
        }

    }//GEN-LAST:event_btnToggleServerStatusMouseClicked
    RealSyncServer Server = null;
    boolean ServerStarted = false;

    public void log(String s) {
        SimpleDateFormat sdf = new SimpleDateFormat("YYYY-MM-DD HH:mm:ss");
        this.txtArLog.setText(this.txtArLog.getText() + "\n" + sdf.format(new Date()) + ": " + s);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            // Set System L&F
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (UnsupportedLookAndFeelException e) {
            // handle exception
        } catch (ClassNotFoundException e) {
            // handle exception
        } catch (InstantiationException e) {
            // handle exception
        } catch (IllegalAccessException e) {
            // handle exception
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyServerUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnToggleServerStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtArLog;
    private javax.swing.JTextField txtServerPort;
    // End of variables declaration//GEN-END:variables
}
